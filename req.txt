npx create-react-app web-shop
clear everything in template
npm i node-sass
npm i react-router-dom

connecting react-router

create firebase project

<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="/__/firebase/8.3.0/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="/__/firebase/8.3.0/firebase-analytics.js"></script>

<!-- Initialize Firebase -->
<script src="/__/firebase/init.js"></script>

// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyCc_iAB1IzH5IPjbbZTdxR1AKYZbB9raaA",
  authDomain: "web-shop-batyr.firebaseapp.com",
  projectId: "web-shop-batyr",
  storageBucket: "web-shop-batyr.appspot.com",
  messagingSenderId: "680377398330",
  appId: "1:680377398330:web:ed5a818ea8070795afb103",
  measurementId: "G-X84RQK33R4"
};




<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.3.0/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/8.3.0/firebase-analytics.js"></script>

<script>
  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  var firebaseConfig = {
    apiKey: "AIzaSyCc_iAB1IzH5IPjbbZTdxR1AKYZbB9raaA",
    authDomain: "web-shop-batyr.firebaseapp.com",
    projectId: "web-shop-batyr",
    storageBucket: "web-shop-batyr.appspot.com",
    messagingSenderId: "680377398330",
    appId: "1:680377398330:web:76b10711e2d87bb9afb103",
    measurementId: "G-CL4T54F1GK"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>

set firestore rules >>> delete everything after read nad writre

npm i firebase

set auth 
enable google auth

in app js we are making listener if it is user or not
(or do we have this person in our users(redux)
and if we have it we setcurrentuser to authuser
and it will be true



initializeApp 
go to firebase and enable phone auth
add a fake number and code
go to docs
make a file for login with phone number input
and submiy button
set  a function setUpRecaptcha = () => {
  
}
const setUpRecaptcha = () => {
  window.recaptchaVerifier = new auth.RecaptchaVerifier(
    "recaptcha-container",
    {
      "size":"invisible",
      "callback":function (response) {
        onSignInSubmit();
      },
    }
  );
};


============================================================================
REDUX
===============================================
1. npm i react-redux redux-logger
2. create folder redux/User
    2.1.user.types.js >>> types of functionality what you can do
    EX:
      const userTypes = {
        SET_CURRENT_USER: "SET_CURRENT_USER"
      };

    2.2  user.reducer.js >>> reducer it define wich functionality must happen 
      2.2.1  first it set initial state
      2.2.2  after that it impoty user.types
      2.2.3  make a switch functionality   like if chosen this must do that
===================================================
3. after that create rootReducer
  3.1 import combineReducers from redux
  3.2 import userReducer from user.reducer

  3.3 after that export reducers with combineReducers({
    user:userReducer
  })
===================================================
4. create a store 
  createStore.js
  4.1  define a middleware 
  4.2  import logger from redux-logger
  4.3  import createstore, applymiddleware from redux
  4.4  import rootReducer from rootReducer

  4.5  export middlewares = [logger]
  4.6  export store = createStore(rootReducer, applymiddleware(...middleware))

===================================================
5. go to index.js 
  5.1  and import // Redux
  5.2  import {Provider} from "react-redux"
  5.3  import store from "./redux/createStore";
  5.4  after that wrap index.js with Provider and pass a store to a Provider

===================================================
6. after that trying  to take a user to header component
  6.1  importing connect from react-redux
  6.2  and setting mapStateToProps >>> it defines which 
       information do you need
      EX:
        const mapStateToProps = ({user}) => ({
          currentUser:user.currentUser
        })

    this user from rootReducer
    and this currentUser from user.reducer.js

  6.3  and connect mapStateToProps with Header
    like that : connect(mapStateToProps, null)(Header)
    null is dispatch actions
===================================================
7. Create user.actions.js
    for dispatching
    7.1  import userTypes from "./user.types";
    7.2  export action EX:
      export const setCurrentUser = user => ({
          type: userTypes.SET_CURRENT_USER,
          payload:user
      })
===================================================
8. Go to app.js and connect mapDispatchToProps
    import {setCurrentUser} from "./redux/User/user.actions"
    Ex:
    const mapDispatchToProps = dispatch => ({
      setCurrentUser: user => dispatch(setCurrentUser(user))
    })
    export default connect(mapStateToProps, mapDispatchToProps)(App);
===========================================================================